variables:
  MAINTAINER: shukun
  BUILD_WORKSPACE: build
  DOCKER_HOST: 'tcp://docker:2375'
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - check
  - build
  - deploy
  - test
  - teardown

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
  paths:
    - $DOCKER_CACHE_PATH

image:
  name: $HARBOR_REPO/devops/docker:19

lint:
  stage: check
  image: $HARBOR_REPO/devops/python:3.7.6
  script:
    - pip install -i http://nexus.shukun.net/repository/shukun_pypi/simple --trusted-host nexus.shukun.net pylint==2.6.0
    - shopt -s globstar
    - rm -rf $CI_PROJECT_DIR/alg
    - pylint --rcfile=$CI_PROJECT_DIR/pylintrc $CI_PROJECT_DIR/**/*.py
  only:
    - develop
    - /^release\/*/
    - /^hotfix\/*/
    - merge_requests

build_web_job:
  stage: build
  script:
    - echo 'start build docker release image'
    - rm -rf .git
    - docker login -u $DOCKER_USER -p "$DOCKER_PASS" $HARBOR_REPO
    - docker build -f $CI_PROJECT_DIR/$BUILD_WORKSPACE/Dockerfile --build-arg PROJECT=$CI_PROJECT_NAME -t $HARBOR_REPO/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA $CI_PROJECT_DIR
    - docker push $HARBOR_REPO/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA
  only:
    - web

build_tag_job:
  stage: build
  script:
    - echo 'start build docker release image'
    - rm -rf .git
    - docker login -u $DOCKER_USER -p "$DOCKER_PASS" $HARBOR_REPO
    - docker build -f $CI_PROJECT_DIR/$BUILD_WORKSPACE/Dockerfile --build-arg PROJECT=$CI_PROJECT_NAME -t $HARBOR_REPO/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_TAG $CI_PROJECT_DIR
    - docker push $HARBOR_REPO/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  only:
    - tags

build_develop_job:
  stage: build
  script:
    - echo 'start build docker release image'
    - rm -rf .git
    - docker login -u $DOCKER_USER -p "$DOCKER_PASS" $HARBOR_REPO
    - docker build -f $CI_PROJECT_DIR/$BUILD_WORKSPACE/Dockerfile --build-arg PROJECT=$CI_PROJECT_NAME -t $HARBOR_REPO/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA $CI_PROJECT_DIR
    - docker push $HARBOR_REPO/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA
  only:
    - develop
    - /^release\/*/
    - /^hotfix\/*/

build_mr_job:
  stage: build
  script:
    - echo 'start build docker release image'
    - rm -rf .git
    - docker login -u $DOCKER_USER -p "$DOCKER_PASS" $HARBOR_REPO
    - docker build -f $CI_PROJECT_DIR/$BUILD_WORKSPACE/Dockerfile --build-arg PROJECT=$CI_PROJECT_NAME -t $HARBOR_REPO/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA $CI_PROJECT_DIR
    - docker push $HARBOR_REPO/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA
  only:
    - merge_requests

deploy_mr_job:
  stage: deploy
  image: $HARBOR_REPO/devops/api-test-env:latest
  script:
    - echo 'sync pr code with stg'
    - cd ~
    - bash sync_pr_with_stg.sh
    - echo 'start deploy the code of branch to be merged'
    - kubectl -n test-pr set image deployment $CI_PROJECT_NAME *=$HARBOR_REPO/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA --record
    - bash wait_for_deploy.sh $CI_PROJECT_NAME
    - echo 'deploy finsh'
  only:
    - merge_requests

test_mr_job:
  stage: test
  image: $HARBOR_REPO/devops/api-test-env:latest
  script:
    - echo 'start test'
    - git clone ssh://git@gitlab.shukun.net:6822/qatools/api-test.git
    - cd api-test
    - pip install -r requirements.txt
    - cd $CI_PROJECT_NAME
    - pytest
  only:
    - merge_requests

clean_mr_job:
  stage: teardown
  image: $HARBOR_REPO/devops/api-test-env:latest
  script:
    - echo 'start roll back'
    - cd ~
    - kubectl -n test-pr rollout undo deployments/$CI_PROJECT_NAME
    - bash wait_for_deploy.sh $CI_PROJECT_NAME
    - echo 'roll back finish'
  only:
    - merge_requests
  when: on_failure

